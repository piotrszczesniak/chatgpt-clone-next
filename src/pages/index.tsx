import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.scss';

import Button from '@mui/material/Button';
import AddIcon from '@mui/icons-material/Add';
import { ChangeEvent, FormEvent, useState } from 'react';
import { Box, Container, Paper, TextField } from '@mui/material';

const inter = Inter({ subsets: ['latin'] });

// https://www.youtube.com/watch?v=uRQH2CFvedY

type Message = {
  role: 'user' | 'assistant' | null;
  content: string | null;
};

// PRAGMA foreign_keys = ON;

// TODO:
//  * sqlite3 // npm
//  * mysql: insert, select (where from), delete
//  * front <---> backend <---> baza
//  * https://sqlitebrowser.org/
//  * sqlite3 orm node

export default function Home() {
  const [value, setValue] = useState<string>('');

  const [messages, setMessages] = useState<Message[] | []>([]);

  const handleValueChange = (e: ChangeEvent<HTMLInputElement>) => {
    setValue(e.target.value);
  };

  const handleMessagesSend = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setMessages([...messages, { role: 'user', content: value }]);
    fetchData();
  };

  const fetchData = async () => {
    const requestOptions = {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        messages: [...messages, { role: 'user', content: value }],
      }),
    };

    try {
      const resposne = await fetch(`http://localhost:3000/api/generate`, requestOptions);
      const data = await resposne.json();
      setMessages((currentMessages) => [...currentMessages, data.choices[0].message]);
      setValue('');
    } catch (error) {
      console.error(error);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={`${styles.main}`}>
        <section className={styles.sidebar}>
          <Button className={styles.button} color='info' fullWidth variant='outlined' startIcon={<AddIcon />}>
            new chat
          </Button>

          <nav>
            <p>Made by Piotr</p>
          </nav>
        </section>
        <section className={styles.content}>
          <Container>
            {messages.map((message, index) => {
              return (
                <Box sx={{ bgcolor: '#cfe8fc', marginBottom: '0.5rem' }} key={index}>
                  <Paper key={index} sx={{ padding: '0.5rem' }}>
                    {message.role}: {message.content}
                  </Paper>
                </Box>
              );
            })}
            <form onSubmit={handleMessagesSend}>
              <TextField fullWidth value={value} onChange={handleValueChange} label='Ask me anything!' maxRows={4} />
              <Button type='submit'>go</Button>
            </form>
          </Container>
        </section>
      </main>
    </>
  );
}
